{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\github\\\\jsonldresume\\\\resume\\\\src\\\\context\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport remove from 'lodash/remove';\nimport JsonldData from '../resume.json';\nimport { move } from './utils';\nconst initialState = {\n  data: {\n    jsonld: {\n      \"@context\": [\"https://jsonldresume.github.io/skill/context.json\", {\n        \"gender\": {\n          \"@id\": \"schema:gender\",\n          \"@type\": \"@vocab\"\n        },\n        \"skill:classOfAward\": {\n          \"@id\": \"skill:classOfAward\",\n          \"@type\": \"@vocab\"\n        },\n        \"skill:securityClearance\": {\n          \"@id\": \"skill:securityClearance\",\n          \"@type\": \"@vocab\"\n        },\n        \"category\": {\n          \"@id\": \"schema:category\",\n          \"@type\": \"@vocab\"\n        },\n        \"dayOfWeek\": {\n          \"@id\": \"schema:dayOfWeek\",\n          \"@type\": \"@vocab\"\n        }\n      }],\n      '@graph': [{\n        \"@type\": \"skill:Resume\"\n      }, {\n        \"@type\": \"Person\",\n        givenName: [{\n          '@language': 'en',\n          '@value': ''\n        }],\n        familyName: [{\n          '@language': 'en',\n          '@value': ''\n        }],\n        address: []\n      }]\n    },\n    profile: {\n      heading: 'Profile',\n      photo: '',\n      firstName: '',\n      lastName: '',\n      subtitle: '',\n      address: {\n        line1: '',\n        line2: '',\n        line3: ''\n      },\n      phone: '',\n      website: '',\n      email: ''\n    },\n    contacts: {\n      \"enable\": true,\n      heading: \"Contacts\"\n    },\n    address: {\n      \"enable\": true,\n      heading: 'Address'\n    },\n    objective: {\n      enable: true,\n      heading: 'Objective',\n      body: ''\n    },\n    work: {\n      enable: true,\n      heading: 'Work Experience',\n      items: []\n    },\n    education: {\n      enable: true,\n      heading: 'Education',\n      items: []\n    },\n    awards: {\n      enable: true,\n      heading: 'Honors & Awards',\n      items: []\n    },\n    certifications: {\n      enable: true,\n      heading: 'Certifications',\n      items: []\n    },\n    skills: {\n      enable: true,\n      heading: 'Skills',\n      items: []\n    },\n    memberships: {\n      enable: true,\n      heading: 'Memberships',\n      items: []\n    },\n    languages: {\n      enable: true,\n      heading: 'Languages',\n      items: []\n    },\n    references: {\n      enable: true,\n      heading: 'References',\n      items: []\n    },\n    extras: {\n      enable: true,\n      heading: 'Personal Information',\n      items: []\n    }\n  },\n  theme: {\n    layout: 'Onyx',\n    font: {\n      family: ''\n    },\n    colors: {\n      background: '#ffffff',\n      primary: '#212121',\n      accent: '#f44336'\n    }\n  },\n  settings: {\n    language: 'en'\n  }\n};\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  let items;\n  const newState = JSON.parse(JSON.stringify(state));\n\n  switch (type) {\n    case 'migrate_section':\n      return set({ ...newState\n      }, `data.${payload.key}`, payload.value);\n\n    case 'add_item':\n      items = get({ ...newState\n      }, `${payload.key}`, []);\n      items.push(payload.value);\n      return set({ ...newState\n      }, `${payload.key}`, items);\n\n    case 'delete_item':\n      items = get({ ...newState\n      }, `${payload.key}`, []);\n      remove(items, x => x.id === payload.value.id);\n      return set({ ...newState\n      }, `${payload.key}`, items);\n\n    case 'move_item_up':\n      items = get({ ...newState\n      }, `${payload.key}`, []);\n      move(items, payload.value, -1);\n      return set({ ...newState\n      }, `${payload.key}`, items);\n\n    case 'move_item_down':\n      items = get({ ...newState\n      }, `${payload.key}`, []);\n      move(items, payload.value, 1);\n      return set({ ...newState\n      }, `${payload.key}`, items);\n\n    case 'on_input':\n      return set({ ...newState\n      }, payload.key, payload.value);\n\n    case 'save_data':\n      localStorage.setItem('state', JSON.stringify(newState));\n      return newState;\n\n    case 'import_data':\n      if (payload === null) return initialState;\n\n      for (const section of Object.keys(initialState.data)) {\n        if (!(section in payload.data)) {\n          payload.data[section] = initialState.data[section];\n        }\n      }\n\n      return { ...newState,\n        ...payload\n      };\n\n    case 'load_demo_data':\n      return { ...newState,\n        ...JsonldData\n      };\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return newState;\n  }\n};\n\nconst AppContext = /*#__PURE__*/createContext(initialState);\nconst {\n  Provider\n} = AppContext;\n\nconst StateProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StateProvider;\nexport const AppProvider = StateProvider;\nexport const AppConsumer = AppContext.Consumer;\nexport default AppContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["D:/github/jsonldresume/resume/src/context/AppContext.js"],"names":["React","createContext","useReducer","get","set","remove","JsonldData","move","initialState","data","jsonld","givenName","familyName","address","profile","heading","photo","firstName","lastName","subtitle","line1","line2","line3","phone","website","email","contacts","objective","enable","body","work","items","education","awards","certifications","skills","memberships","languages","references","extras","theme","layout","font","family","colors","background","primary","accent","settings","language","reducer","state","type","payload","newState","JSON","parse","stringify","key","value","push","x","id","localStorage","setItem","section","Object","keys","AppContext","Provider","StateProvider","children","dispatch","AppProvider","AppConsumer","Consumer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAC;AACL,kBAAY,CAChB,mDADgB,EAEhB;AACC,kBAAU;AACT,iBAAO,eADE;AAET,mBAAS;AAFA,SADX;AAKC,8BAAsB;AACrB,iBAAO,oBADc;AAErB,mBAAS;AAFY,SALvB;AASC,mCAA2B;AAC1B,iBAAO,yBADmB;AAE1B,mBAAS;AAFiB,SAT5B;AAaC,oBAAY;AACX,iBAAO,iBADI;AAEX,mBAAS;AAFE,SAbb;AAiBC,qBAAa;AACZ,iBAAO,kBADK;AAEZ,mBAAS;AAFG;AAjBd,OAFgB,CADP;AA0BL,gBAAU,CACR;AACE,iBAAS;AADX,OADQ,EAIR;AACE,iBAAS,QADX;AAEEC,QAAAA,SAAS,EAAC,CAAC;AAAC,uBAAa,IAAd;AAAoB,oBAAS;AAA7B,SAAD,CAFZ;AAGEC,QAAAA,UAAU,EAAE,CAAC;AAAC,uBAAa,IAAd;AAAoB,oBAAS;AAA7B,SAAD,CAHd;AAIEC,QAAAA,OAAO,EAAE;AAJX,OAJQ;AA1BL,KADH;AAuCJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,SADF;AAEPC,MAAAA,KAAK,EAAE,EAFA;AAGPC,MAAAA,SAAS,EAAE,EAHJ;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,QAAQ,EAAE,EALH;AAMPN,MAAAA,OAAO,EAAE;AACPO,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,KAAK,EAAE,EAFA;AAGPC,QAAAA,KAAK,EAAE;AAHA,OANF;AAWPC,MAAAA,KAAK,EAAE,EAXA;AAYPC,MAAAA,OAAO,EAAE,EAZF;AAaPC,MAAAA,KAAK,EAAE;AAbA,KAvCL;AAsDJC,IAAAA,QAAQ,EAAE;AACR,gBAAU,IADF;AAERX,MAAAA,OAAO,EAAE;AAFD,KAtDN;AA0DJF,IAAAA,OAAO,EAAE;AACP,gBAAU,IADH;AAEPE,MAAAA,OAAO,EAAE;AAFF,KA1DL;AA8DJY,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,IADC;AAETb,MAAAA,OAAO,EAAE,WAFA;AAGTc,MAAAA,IAAI,EAAE;AAHG,KA9DP;AAmEJC,IAAAA,IAAI,EAAE;AACJF,MAAAA,MAAM,EAAE,IADJ;AAEJb,MAAAA,OAAO,EAAE,iBAFL;AAGJgB,MAAAA,KAAK,EAAE;AAHH,KAnEF;AAwEJC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,MAAM,EAAE,IADC;AAETb,MAAAA,OAAO,EAAE,WAFA;AAGTgB,MAAAA,KAAK,EAAE;AAHE,KAxEP;AA6EJE,IAAAA,MAAM,EAAE;AACNL,MAAAA,MAAM,EAAE,IADF;AAENb,MAAAA,OAAO,EAAE,iBAFH;AAGNgB,MAAAA,KAAK,EAAE;AAHD,KA7EJ;AAkFJG,IAAAA,cAAc,EAAE;AACdN,MAAAA,MAAM,EAAE,IADM;AAEdb,MAAAA,OAAO,EAAE,gBAFK;AAGdgB,MAAAA,KAAK,EAAE;AAHO,KAlFZ;AAuFJI,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAE,IADF;AAENb,MAAAA,OAAO,EAAE,QAFH;AAGNgB,MAAAA,KAAK,EAAE;AAHD,KAvFJ;AA4FJK,IAAAA,WAAW,EAAE;AACXR,MAAAA,MAAM,EAAE,IADG;AAEXb,MAAAA,OAAO,EAAE,aAFE;AAGXgB,MAAAA,KAAK,EAAE;AAHI,KA5FT;AAiGJM,IAAAA,SAAS,EAAE;AACTT,MAAAA,MAAM,EAAE,IADC;AAETb,MAAAA,OAAO,EAAE,WAFA;AAGTgB,MAAAA,KAAK,EAAE;AAHE,KAjGP;AAsGJO,IAAAA,UAAU,EAAE;AACVV,MAAAA,MAAM,EAAE,IADE;AAEVb,MAAAA,OAAO,EAAE,YAFC;AAGVgB,MAAAA,KAAK,EAAE;AAHG,KAtGR;AA2GJQ,IAAAA,MAAM,EAAE;AACNX,MAAAA,MAAM,EAAE,IADF;AAENb,MAAAA,OAAO,EAAE,sBAFH;AAGNgB,MAAAA,KAAK,EAAE;AAHD;AA3GJ,GADa;AAkHnBS,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KAFD;AAKLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE,SADN;AAENC,MAAAA,OAAO,EAAE,SAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF;AALH,GAlHY;AA6HnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF;AA7HS,CAArB;;AAkIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAR,KAA8B;AAC5C,MAAItB,KAAJ;AACA,QAAMuB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;;AAEA,UAAQC,IAAR;AACE,SAAK,iBAAL;AACE,aAAOhD,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAmB,QAAOD,OAAO,CAACK,GAAI,EAAtC,EAAyCL,OAAO,CAACM,KAAjD,CAAV;;AACF,SAAK,UAAL;AACE5B,MAAAA,KAAK,GAAG5B,GAAG,CAAC,EAAE,GAAGmD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC,EAApC,CAAX;AACA3B,MAAAA,KAAK,CAAC6B,IAAN,CAAWP,OAAO,CAACM,KAAnB;AACA,aAAOvD,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC3B,KAApC,CAAV;;AACF,SAAK,aAAL;AACEA,MAAAA,KAAK,GAAG5B,GAAG,CAAC,EAAE,GAAGmD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC,EAApC,CAAX;AACArD,MAAAA,MAAM,CAAC0B,KAAD,EAAQ8B,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAST,OAAO,CAACM,KAAR,CAAcG,EAApC,CAAN;AACA,aAAO1D,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC3B,KAApC,CAAV;;AACF,SAAK,cAAL;AACEA,MAAAA,KAAK,GAAG5B,GAAG,CAAC,EAAE,GAAGmD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC,EAApC,CAAX;AACAnD,MAAAA,IAAI,CAACwB,KAAD,EAAQsB,OAAO,CAACM,KAAhB,EAAuB,CAAC,CAAxB,CAAJ;AACA,aAAOvD,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC3B,KAApC,CAAV;;AACF,SAAK,gBAAL;AACEA,MAAAA,KAAK,GAAG5B,GAAG,CAAC,EAAE,GAAGmD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC,EAApC,CAAX;AACAnD,MAAAA,IAAI,CAACwB,KAAD,EAAQsB,OAAO,CAACM,KAAhB,EAAuB,CAAvB,CAAJ;AACA,aAAOvD,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAmB,GAAED,OAAO,CAACK,GAAI,EAAjC,EAAoC3B,KAApC,CAAV;;AACF,SAAK,UAAL;AACE,aAAO3B,GAAG,CAAC,EAAE,GAAGkD;AAAL,OAAD,EAAkBD,OAAO,CAACK,GAA1B,EAA+BL,OAAO,CAACM,KAAvC,CAAV;;AACF,SAAK,WAAL;AACEI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACE,SAAL,CAAeH,QAAf,CAA9B;AACA,aAAOA,QAAP;;AACF,SAAK,aAAL;AACE,UAAID,OAAO,KAAK,IAAhB,EAAsB,OAAO7C,YAAP;;AAEtB,WAAK,MAAMyD,OAAX,IAAsBC,MAAM,CAACC,IAAP,CAAY3D,YAAY,CAACC,IAAzB,CAAtB,EAAsD;AACpD,YAAI,EAAEwD,OAAO,IAAIZ,OAAO,CAAC5C,IAArB,CAAJ,EAAgC;AAC9B4C,UAAAA,OAAO,CAAC5C,IAAR,CAAawD,OAAb,IAAwBzD,YAAY,CAACC,IAAb,CAAkBwD,OAAlB,CAAxB;AACD;AACF;;AAED,aAAO,EACL,GAAGX,QADE;AAEL,WAAGD;AAFE,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGC,QADE;AAEL,WAAGhD;AAFE,OAAP;;AAIF,SAAK,OAAL;AACE,aAAOE,YAAP;;AACF;AACE,aAAO8C,QAAP;AA7CJ;AA+CD,CAnDD;;AAqDA,MAAMc,UAAU,gBAAGnE,aAAa,CAACO,YAAD,CAAhC;AACA,MAAM;AAAE6D,EAAAA;AAAF,IAAeD,UAArB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC,QAAM,CAACpB,KAAD,EAAQqB,QAAR,IAAoBtE,UAAU,CAACgD,OAAD,EAAU1C,YAAV,CAApC;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE2C,MAAAA,KAAF;AAASqB,MAAAA;AAAT,KAAjB;AAAA,cAAuCD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;GAAMD,a;;KAAAA,a;AAKN,OAAO,MAAMG,WAAW,GAAGH,aAApB;AACP,OAAO,MAAMI,WAAW,GAAGN,UAAU,CAACO,QAA/B;AAEP,eAAeP,UAAf","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport get from 'lodash/get';\r\nimport set from 'lodash/set';\r\nimport remove from 'lodash/remove';\r\n\r\nimport JsonldData from '../resume.json';\r\nimport { move } from './utils';\r\n\r\nconst initialState = {\r\n  data: {\r\n    jsonld:{\r\n      \"@context\": [\r\n\t\t\"https://jsonldresume.github.io/skill/context.json\",\r\n\t\t{\r\n\t\t\t\"gender\": {\r\n\t\t\t\t\"@id\": \"schema:gender\",\r\n\t\t\t\t\"@type\": \"@vocab\"\r\n\t\t\t},\r\n\t\t\t\"skill:classOfAward\": {\r\n\t\t\t\t\"@id\": \"skill:classOfAward\",\r\n\t\t\t\t\"@type\": \"@vocab\"\r\n\t\t\t},\r\n\t\t\t\"skill:securityClearance\": {\r\n\t\t\t\t\"@id\": \"skill:securityClearance\",\r\n\t\t\t\t\"@type\": \"@vocab\"\r\n\t\t\t},\r\n\t\t\t\"category\": {\r\n\t\t\t\t\"@id\": \"schema:category\",\r\n\t\t\t\t\"@type\": \"@vocab\"\r\n\t\t\t},\r\n\t\t\t\"dayOfWeek\": {\r\n\t\t\t\t\"@id\": \"schema:dayOfWeek\",\r\n\t\t\t\t\"@type\": \"@vocab\"\r\n\t\t\t}\r\n\t\t}\r\n      ],\r\n      '@graph': [\r\n        {\r\n          \"@type\": \"skill:Resume\",\r\n        },\r\n        {\r\n          \"@type\": \"Person\",\r\n          givenName:[{'@language': 'en', '@value':''}],\r\n          familyName: [{'@language': 'en', '@value':''}],\r\n          address: []\r\n        }\r\n      ]\r\n    },\r\n    profile: {\r\n      heading: 'Profile',\r\n      photo: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      subtitle: '',\r\n      address: {\r\n        line1: '',\r\n        line2: '',\r\n        line3: '',\r\n      },\r\n      phone: '',\r\n      website: '',\r\n      email: '',\r\n    },\r\n    contacts: {\r\n      \"enable\": true,\r\n      heading: \"Contacts\"\r\n    },\r\n    address: {\r\n      \"enable\": true,\r\n      heading: 'Address'\r\n    },\r\n    objective: {\r\n      enable: true,\r\n      heading: 'Objective',\r\n      body: '',\r\n    },\r\n    work: {\r\n      enable: true,\r\n      heading: 'Work Experience',\r\n      items: [],\r\n    },\r\n    education: {\r\n      enable: true,\r\n      heading: 'Education',\r\n      items: [],\r\n    },\r\n    awards: {\r\n      enable: true,\r\n      heading: 'Honors & Awards',\r\n      items: [],\r\n    },\r\n    certifications: {\r\n      enable: true,\r\n      heading: 'Certifications',\r\n      items: [],\r\n    },\r\n    skills: {\r\n      enable: true,\r\n      heading: 'Skills',\r\n      items: [],\r\n    },\r\n    memberships: {\r\n      enable: true,\r\n      heading: 'Memberships',\r\n      items: [],\r\n    },\r\n    languages: {\r\n      enable: true,\r\n      heading: 'Languages',\r\n      items: [],\r\n    },\r\n    references: {\r\n      enable: true,\r\n      heading: 'References',\r\n      items: [],\r\n    },\r\n    extras: {\r\n      enable: true,\r\n      heading: 'Personal Information',\r\n      items: [],\r\n    },\r\n  },\r\n  theme: {\r\n    layout: 'Onyx',\r\n    font: {\r\n      family: '',\r\n    },\r\n    colors: {\r\n      background: '#ffffff',\r\n      primary: '#212121',\r\n      accent: '#f44336',\r\n    },\r\n  },\r\n  settings: {\r\n    language: 'en',\r\n  },\r\n};\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  let items;\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n\r\n  switch (type) {\r\n    case 'migrate_section':\r\n      return set({ ...newState }, `data.${payload.key}`, payload.value);\r\n    case 'add_item':\r\n      items = get({ ...newState }, `${payload.key}`, []);\r\n      items.push(payload.value);\r\n      return set({ ...newState }, `${payload.key}`, items);\r\n    case 'delete_item':\r\n      items = get({ ...newState }, `${payload.key}`, []);\r\n      remove(items, x => x.id === payload.value.id);\r\n      return set({ ...newState }, `${payload.key}`, items);\r\n    case 'move_item_up':\r\n      items = get({ ...newState }, `${payload.key}`, []);\r\n      move(items, payload.value, -1);\r\n      return set({ ...newState }, `${payload.key}`, items);\r\n    case 'move_item_down':\r\n      items = get({ ...newState }, `${payload.key}`, []);\r\n      move(items, payload.value, 1);\r\n      return set({ ...newState }, `${payload.key}`, items);\r\n    case 'on_input':\r\n      return set({ ...newState }, payload.key, payload.value);\r\n    case 'save_data':\r\n      localStorage.setItem('state', JSON.stringify(newState));\r\n      return newState;\r\n    case 'import_data':\r\n      if (payload === null) return initialState;\r\n\r\n      for (const section of Object.keys(initialState.data)) {\r\n        if (!(section in payload.data)) {\r\n          payload.data[section] = initialState.data[section];\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...newState,\r\n        ...payload,\r\n      };\r\n    case 'load_demo_data':\r\n      return {\r\n        ...newState,\r\n        ...JsonldData,\r\n      };\r\n    case 'reset':\r\n      return initialState;\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n\r\nconst AppContext = createContext(initialState);\r\nconst { Provider } = AppContext;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport const AppProvider = StateProvider;\r\nexport const AppConsumer = AppContext.Consumer;\r\n\r\nexport default AppContext;\r\n"]},"metadata":{},"sourceType":"module"}