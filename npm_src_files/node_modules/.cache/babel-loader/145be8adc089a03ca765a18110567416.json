{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $some = require('../internals/array-iteration').some;\n\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some'); // `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !STRICT_METHOD || !USES_TO_LENGTH\n}, {\n  some: function some(callbackfn\n  /* , thisArg */\n  ) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/core-js-pure/modules/es.array.some.js"],"names":["$","require","$some","some","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,IAApD;;AACA,IAAIC,mBAAmB,GAAGH,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAII,uBAAuB,GAAGJ,OAAO,CAAC,0CAAD,CAArC;;AAEA,IAAIK,aAAa,GAAGF,mBAAmB,CAAC,MAAD,CAAvC;AACA,IAAIG,cAAc,GAAGF,uBAAuB,CAAC,MAAD,CAA5C,C,CAEA;AACA;;AACAL,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACJ,aAAD,IAAkB,CAACC;AAA3D,CAAD,EAA8E;AAC7EJ,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcQ;AAAW;AAAzB,IAA0C;AAC9C,WAAOT,KAAK,CAAC,IAAD,EAAOS,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAZ;AACD;AAH4E,CAA9E,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}