{"ast":null,"code":"'use strict';\n\nmodule.exports = parse;\n\nvar fromMarkdown = require('mdast-util-from-markdown');\n\nfunction parse(options) {\n  var self = this;\n  this.Parser = parse;\n\n  function parse(doc) {\n    return fromMarkdown(doc, Object.assign({}, self.data('settings'), options, {\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    }));\n  }\n}","map":{"version":3,"sources":["D:/github/jsonldresume/my-app/node_modules/remark-parse/index.js"],"names":["module","exports","parse","fromMarkdown","require","options","self","Parser","doc","Object","assign","data","extensions","mdastExtensions"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AAEA,SAASF,KAAT,CAAeG,OAAf,EAAwB;AACtB,MAAIC,IAAI,GAAG,IAAX;AAEA,OAAKC,MAAL,GAAcL,KAAd;;AAEA,WAASA,KAAT,CAAeM,GAAf,EAAoB;AAClB,WAAOL,YAAY,CACjBK,GADiB,EAEjBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAI,CAACK,IAAL,CAAU,UAAV,CAAlB,EAAyCN,OAAzC,EAAkD;AAChD;AACA;AACA;AACAO,MAAAA,UAAU,EAAEN,IAAI,CAACK,IAAL,CAAU,qBAAV,KAAoC,EAJA;AAKhDE,MAAAA,eAAe,EAAEP,IAAI,CAACK,IAAL,CAAU,wBAAV,KAAuC;AALR,KAAlD,CAFiB,CAAnB;AAUD;AACF","sourcesContent":["'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}