{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $filter = require('../internals/array-iteration').filter;\n\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // Edge 14- issue\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter'); // `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n}, {\n  filter: function filter(callbackfn\n  /* , thisArg */\n  ) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/core-js-pure/modules/es.array.filter.js"],"names":["$","require","$filter","filter","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,MAAtD;;AACA,IAAIC,4BAA4B,GAAGH,OAAO,CAAC,+CAAD,CAA1C;;AACA,IAAII,uBAAuB,GAAGJ,OAAO,CAAC,0CAAD,CAArC;;AAEA,IAAIK,mBAAmB,GAAGF,4BAA4B,CAAC,QAAD,CAAtD,C,CACA;;AACA,IAAIG,cAAc,GAAGF,uBAAuB,CAAC,QAAD,CAA5C,C,CAEA;AACA;AACA;;AACAL,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACJ,mBAAD,IAAwB,CAACC;AAAjE,CAAD,EAAoF;AACnFJ,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBQ;AAAW;AAA3B,IAA4C;AAClD,WAAOT,OAAO,CAAC,IAAD,EAAOS,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAd;AACD;AAHkF,CAApF,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}