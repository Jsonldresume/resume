{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $includes = require('../internals/array-includes').includes;\n\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', {\n  ACCESSORS: true,\n  1: 0\n}); // `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !USES_TO_LENGTH\n}, {\n  includes: function includes(el\n  /* , fromIndex = 0 */\n  ) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\naddToUnscopables('includes');","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/core-js-pure/modules/es.array.includes.js"],"names":["$","require","$includes","includes","addToUnscopables","arrayMethodUsesToLength","USES_TO_LENGTH","ACCESSORS","target","proto","forced","el","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,6BAAD,CAAP,CAAuCE,QAAvD;;AACA,IAAIC,gBAAgB,GAAGH,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAII,uBAAuB,GAAGJ,OAAO,CAAC,0CAAD,CAArC;;AAEA,IAAIK,cAAc,GAAGD,uBAAuB,CAAC,SAAD,EAAY;AAAEE,EAAAA,SAAS,EAAE,IAAb;AAAmB,KAAG;AAAtB,CAAZ,CAA5C,C,CAEA;AACA;;AACAP,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACJ;AAAzC,CAAD,EAA4D;AAC3DH,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBQ;AAAG;AAArB,IAA4C;AACpD,WAAOT,SAAS,CAAC,IAAD,EAAOS,EAAP,EAAWC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAjD,CAAhB;AACD;AAH0D,CAA5D,CAAD,C,CAMA;;AACAV,gBAAgB,CAAC,UAAD,CAAhB","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"]},"metadata":{},"sourceType":"script"}