{"ast":null,"code":"'use strict';\n/* Expose. */\n\nmodule.exports = visitParents;\n/* Visit. */\n\nfunction visitParents(tree, type, visitor) {\n  var stack = [];\n\n  if (typeof type === 'function') {\n    visitor = type;\n    type = null;\n  }\n\n  one(tree);\n  /* Visit a single node. */\n\n  function one(node) {\n    var result;\n\n    if (!type || node.type === type) {\n      result = visitor(node, stack.concat());\n    }\n\n    if (node.children && result !== false) {\n      return all(node.children, node);\n    }\n\n    return result;\n  }\n  /* Visit children in `parent`. */\n\n\n  function all(children, parent) {\n    var length = children.length;\n    var index = -1;\n    var child;\n    stack.push(parent);\n\n    while (++index < length) {\n      child = children[index];\n\n      if (child && one(child) === false) {\n        return false;\n      }\n    }\n\n    stack.pop();\n    return true;\n  }\n}","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/unist-util-visit-parents/index.js"],"names":["module","exports","visitParents","tree","type","visitor","stack","one","node","result","concat","children","all","parent","length","index","child","push","pop"],"mappings":"AAAA;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;;AACA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACzC,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,IAAAA,OAAO,GAAGD,IAAV;AACAA,IAAAA,IAAI,GAAG,IAAP;AACD;;AAEDG,EAAAA,GAAG,CAACJ,IAAD,CAAH;AAEA;;AACA,WAASI,GAAT,CAAaC,IAAb,EAAmB;AACjB,QAAIC,MAAJ;;AAEA,QAAI,CAACL,IAAD,IAASI,IAAI,CAACJ,IAAL,KAAcA,IAA3B,EAAiC;AAC/BK,MAAAA,MAAM,GAAGJ,OAAO,CAACG,IAAD,EAAOF,KAAK,CAACI,MAAN,EAAP,CAAhB;AACD;;AAED,QAAIF,IAAI,CAACG,QAAL,IAAiBF,MAAM,KAAK,KAAhC,EAAuC;AACrC,aAAOG,GAAG,CAACJ,IAAI,CAACG,QAAN,EAAgBH,IAAhB,CAAV;AACD;;AAED,WAAOC,MAAP;AACD;AAED;;;AACA,WAASG,GAAT,CAAaD,QAAb,EAAuBE,MAAvB,EAA+B;AAC7B,QAAIC,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb;AACA,QAAIC,KAAJ;AAEAV,IAAAA,KAAK,CAACW,IAAN,CAAWJ,MAAX;;AAEA,WAAO,EAAEE,KAAF,GAAUD,MAAjB,EAAyB;AACvBE,MAAAA,KAAK,GAAGL,QAAQ,CAACI,KAAD,CAAhB;;AAEA,UAAIC,KAAK,IAAIT,GAAG,CAACS,KAAD,CAAH,KAAe,KAA5B,EAAmC;AACjC,eAAO,KAAP;AACD;AACF;;AAEDV,IAAAA,KAAK,CAACY,GAAN;AAEA,WAAO,IAAP;AACD;AACF","sourcesContent":["'use strict'\n\n/* Expose. */\nmodule.exports = visitParents\n\n/* Visit. */\nfunction visitParents(tree, type, visitor) {\n  var stack = []\n\n  if (typeof type === 'function') {\n    visitor = type\n    type = null\n  }\n\n  one(tree)\n\n  /* Visit a single node. */\n  function one(node) {\n    var result\n\n    if (!type || node.type === type) {\n      result = visitor(node, stack.concat())\n    }\n\n    if (node.children && result !== false) {\n      return all(node.children, node)\n    }\n\n    return result\n  }\n\n  /* Visit children in `parent`. */\n  function all(children, parent) {\n    var length = children.length\n    var index = -1\n    var child\n\n    stack.push(parent)\n\n    while (++index < length) {\n      child = children[index]\n\n      if (child && one(child) === false) {\n        return false\n      }\n    }\n\n    stack.pop()\n\n    return true\n  }\n}\n"]},"metadata":{},"sourceType":"script"}