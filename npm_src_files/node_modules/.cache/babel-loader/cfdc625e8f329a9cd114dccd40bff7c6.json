{"ast":null,"code":"'use strict';\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\n\nvar unicodePunctuation = require('../character/unicode-punctuation.js');\n\nvar unicodeWhitespace = require('../character/unicode-whitespace.js'); // Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\n\n\nfunction classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}\n\nmodule.exports = classifyCharacter;","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/micromark/dist/util/classify-character.js"],"names":["markdownLineEndingOrSpace","require","unicodePunctuation","unicodeWhitespace","classifyCharacter","code","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,yBAAyB,GAAGC,OAAO,CAAC,+CAAD,CAAvC;;AACA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,qCAAD,CAAhC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,oCAAD,CAA/B,C,CAEA;AACA;AACA;AACA;;;AACA,SAASG,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MACEA,IAAI,KAAK,IAAT,IACAL,yBAAyB,CAACK,IAAD,CADzB,IAEAF,iBAAiB,CAACE,IAAD,CAHnB,EAIE;AACA,WAAO,CAAP;AACD;;AAED,MAAIH,kBAAkB,CAACG,IAAD,CAAtB,EAA8B;AAC5B,WAAO,CAAP;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBH,iBAAjB","sourcesContent":["'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n"]},"metadata":{},"sourceType":"script"}