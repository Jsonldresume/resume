{"ast":null,"code":"'use strict';\n\nvar fromCharCode = require('../constant/from-char-code.js');\n\nfunction serializeChunks(chunks) {\n  var index = -1;\n  var result = [];\n  var chunk;\n  var value;\n  var atTab;\n\n  while (++index < chunks.length) {\n    chunk = chunks[index];\n\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else if (chunk === -5) {\n      value = '\\r';\n    } else if (chunk === -4) {\n      value = '\\n';\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n';\n    } else if (chunk === -2) {\n      value = '\\t';\n    } else if (chunk === -1) {\n      if (atTab) continue;\n      value = ' ';\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk);\n    }\n\n    atTab = chunk === -2;\n    result.push(value);\n  }\n\n  return result.join('');\n}\n\nmodule.exports = serializeChunks;","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/micromark/dist/util/serialize-chunks.js"],"names":["fromCharCode","require","serializeChunks","chunks","index","result","chunk","value","atTab","length","push","join","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,+BAAD,CAA1B;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,KAAJ;;AAEA,SAAO,EAAEJ,KAAF,GAAUD,MAAM,CAACM,MAAxB,EAAgC;AAC9BH,IAAAA,KAAK,GAAGH,MAAM,CAACC,KAAD,CAAd;;AAEA,QAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7BC,MAAAA,KAAK,GAAGD,KAAR;AACD,KAFD,MAEO,IAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvBC,MAAAA,KAAK,GAAG,IAAR;AACD,KAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvBC,MAAAA,KAAK,GAAG,IAAR;AACD,KAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvBC,MAAAA,KAAK,GAAG,OAAO,IAAf;AACD,KAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvBC,MAAAA,KAAK,GAAG,IAAR;AACD,KAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvB,UAAIE,KAAJ,EAAW;AACXD,MAAAA,KAAK,GAAG,GAAR;AACD,KAHM,MAGA;AACL;AACAA,MAAAA,KAAK,GAAGP,YAAY,CAACM,KAAD,CAApB;AACD;;AAEDE,IAAAA,KAAK,GAAGF,KAAK,KAAK,CAAC,CAAnB;AACAD,IAAAA,MAAM,CAACK,IAAP,CAAYH,KAAZ;AACD;;AAED,SAAOF,MAAM,CAACM,IAAP,CAAY,EAAZ,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n"]},"metadata":{},"sourceType":"script"}