{"ast":null,"code":"'use strict';\n\nvar labelEnd = require('./label-end.js');\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  function start(code) {\n    effects.enter('labelLink');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelLink');\n    return after;\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n    /* c8 ignore next */\n    '_hiddenFootnoteSupport' in self.parser.constructs ?\n    /* c8 ignore next */\n    nok(code) : ok(code);\n  }\n}\n\nmodule.exports = labelStartLink;","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/micromark/dist/tokenize/label-start-link.js"],"names":["labelEnd","require","labelStartLink","name","tokenize","tokenizeLabelStartLink","resolveAll","effects","ok","nok","self","start","code","enter","consume","exit","after","parser","constructs","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAE,gBADa;AAEnBC,EAAAA,QAAQ,EAAEC,sBAFS;AAGnBC,EAAAA,UAAU,EAAEN,QAAQ,CAACM;AAHF,CAArB;;AAMA,SAASD,sBAAT,CAAgCE,OAAhC,EAAyCC,EAAzC,EAA6CC,GAA7C,EAAkD;AAChD,MAAIC,IAAI,GAAG,IAAX;AACA,SAAOC,KAAP;;AAEA,WAASA,KAAT,CAAeC,IAAf,EAAqB;AACnBL,IAAAA,OAAO,CAACM,KAAR,CAAc,WAAd;AACAN,IAAAA,OAAO,CAACM,KAAR,CAAc,aAAd;AACAN,IAAAA,OAAO,CAACO,OAAR,CAAgBF,IAAhB;AACAL,IAAAA,OAAO,CAACQ,IAAR,CAAa,aAAb;AACAR,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACA,WAAOC,KAAP;AACD;;AAED,WAASA,KAAT,CAAeJ,IAAf,EAAqB;AACnB;AACA,WAAOA,IAAI,KAAK,EAAT;AACL;AACA,gCAA4BF,IAAI,CAACO,MAAL,CAAYC,UAFnC;AAGH;AACAT,IAAAA,GAAG,CAACG,IAAD,CAJA,GAKHJ,EAAE,CAACI,IAAD,CALN;AAMD;AACF;;AAEDO,MAAM,CAACC,OAAP,GAAiBlB,cAAjB","sourcesContent":["'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n"]},"metadata":{},"sourceType":"script"}