{"ast":null,"code":"'use strict';\n\nvar wrap = require('./wrap.js');\n\nmodule.exports = trough;\ntrough.wrap = wrap;\nvar slice = [].slice; // Create new middleware.\n\nfunction trough() {\n  var fns = [];\n  var middleware = {};\n  middleware.run = run;\n  middleware.use = use;\n  return middleware; // Run `fns`.  Last argument must be a completion handler.\n\n  function run() {\n    var index = -1;\n    var input = slice.call(arguments, 0, -1);\n    var done = arguments[arguments.length - 1];\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done);\n    }\n\n    next.apply(null, [null].concat(input)); // Run the next `fn`, if any.\n\n    function next(err) {\n      var fn = fns[++index];\n      var params = slice.call(arguments, 0);\n      var values = params.slice(1);\n      var length = input.length;\n      var pos = -1;\n\n      if (err) {\n        done(err);\n        return;\n      } // Copy non-nully input into values.\n\n\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos];\n        }\n      }\n\n      input = values; // Next or done.\n\n      if (fn) {\n        wrap(fn, next).apply(null, input);\n      } else {\n        done.apply(null, [null].concat(input));\n      }\n    }\n  } // Add `fn` to the list.\n\n\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn);\n    }\n\n    fns.push(fn);\n    return middleware;\n  }\n}","map":{"version":3,"sources":["D:/github/jsonldresume/my-app/node_modules/trough/index.js"],"names":["wrap","require","module","exports","trough","slice","fns","middleware","run","use","index","input","call","arguments","done","length","Error","next","apply","concat","err","fn","params","values","pos","undefined","push"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEAA,MAAM,CAACJ,IAAP,GAAcA,IAAd;AAEA,IAAIK,KAAK,GAAG,GAAGA,KAAf,C,CAEA;;AACA,SAASD,MAAT,GAAkB;AAChB,MAAIE,GAAG,GAAG,EAAV;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAA,EAAAA,UAAU,CAACC,GAAX,GAAiBA,GAAjB;AACAD,EAAAA,UAAU,CAACE,GAAX,GAAiBA,GAAjB;AAEA,SAAOF,UAAP,CAPgB,CAShB;;AACA,WAASC,GAAT,GAAe;AACb,QAAIE,KAAK,GAAG,CAAC,CAAb;AACA,QAAIC,KAAK,GAAGN,KAAK,CAACO,IAAN,CAAWC,SAAX,EAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAZ;AACA,QAAIC,IAAI,GAAGD,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAApB;;AAEA,QAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9B,YAAM,IAAIE,KAAJ,CAAU,6CAA6CF,IAAvD,CAAN;AACD;;AAEDG,IAAAA,IAAI,CAACC,KAAL,CAAW,IAAX,EAAiB,CAAC,IAAD,EAAOC,MAAP,CAAcR,KAAd,CAAjB,EATa,CAWb;;AACA,aAASM,IAAT,CAAcG,GAAd,EAAmB;AACjB,UAAIC,EAAE,GAAGf,GAAG,CAAC,EAAEI,KAAH,CAAZ;AACA,UAAIY,MAAM,GAAGjB,KAAK,CAACO,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAb;AACA,UAAIU,MAAM,GAAGD,MAAM,CAACjB,KAAP,CAAa,CAAb,CAAb;AACA,UAAIU,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,UAAIS,GAAG,GAAG,CAAC,CAAX;;AAEA,UAAIJ,GAAJ,EAAS;AACPN,QAAAA,IAAI,CAACM,GAAD,CAAJ;AACA;AACD,OAVgB,CAYjB;;;AACA,aAAO,EAAEI,GAAF,GAAQT,MAAf,EAAuB;AACrB,YAAIQ,MAAM,CAACC,GAAD,CAAN,KAAgB,IAAhB,IAAwBD,MAAM,CAACC,GAAD,CAAN,KAAgBC,SAA5C,EAAuD;AACrDF,UAAAA,MAAM,CAACC,GAAD,CAAN,GAAcb,KAAK,CAACa,GAAD,CAAnB;AACD;AACF;;AAEDb,MAAAA,KAAK,GAAGY,MAAR,CAnBiB,CAqBjB;;AACA,UAAIF,EAAJ,EAAQ;AACNrB,QAAAA,IAAI,CAACqB,EAAD,EAAKJ,IAAL,CAAJ,CAAeC,KAAf,CAAqB,IAArB,EAA2BP,KAA3B;AACD,OAFD,MAEO;AACLG,QAAAA,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiB,CAAC,IAAD,EAAOC,MAAP,CAAcR,KAAd,CAAjB;AACD;AACF;AACF,GAlDe,CAoDhB;;;AACA,WAASF,GAAT,CAAaY,EAAb,EAAiB;AACf,QAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAM,IAAIL,KAAJ,CAAU,yCAAyCK,EAAnD,CAAN;AACD;;AAEDf,IAAAA,GAAG,CAACoB,IAAJ,CAASL,EAAT;AAEA,WAAOd,UAAP;AACD;AACF","sourcesContent":["'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n"]},"metadata":{},"sourceType":"script"}