{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.boundCoordinates = exports.getScaleMultiplier = exports.getTransformedBoundingBox = exports.TransformMatrix = exports.ZOOM_SPEED_MULTIPLIER = void 0;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar ZOOM_SPEED_MULTIPLIER = 0.065; // Transform matrix use to rotate, zoom and pan\n// Can be written as T(centerX, centerY) * R(theta) * T(-centerX, -centerY) * S(scale, scale) + T(offsetX, offsetY)\n// ( a , c, x )\n// ( b , d, y )\n// ( 0 , 0, 1 )\n\nexports.ZOOM_SPEED_MULTIPLIER = ZOOM_SPEED_MULTIPLIER;\n\nvar TransformMatrix = function TransformMatrix(transformationParameters, centerCoordinates) {\n  var angle = transformationParameters.angle,\n      scale = transformationParameters.scale,\n      offsetX = transformationParameters.offsetX,\n      offsetY = transformationParameters.offsetY;\n  var centerX = centerCoordinates.x,\n      centerY = centerCoordinates.y;\n  var theta = angle * Math.PI / 180;\n  var a = Math.cos(theta) * scale;\n  var b = Math.sin(theta) * scale;\n  var c = -b;\n  var d = a;\n  var transformX = -centerX * a + centerY * b + centerX * scale;\n  var transformY = centerX * c - centerY * d + centerY * scale;\n  return {\n    a: a,\n    b: b,\n    c: c,\n    d: d,\n    x: transformX + offsetX,\n    y: transformY + offsetY\n  };\n};\n\nexports.TransformMatrix = TransformMatrix;\n\nvar applyTransformMatrix = function applyTransformMatrix(transformationParameters, centerCoordinates) {\n  return function (x, y) {\n    var _TransformMatrix = TransformMatrix(transformationParameters, centerCoordinates),\n        a = _TransformMatrix.a,\n        b = _TransformMatrix.b,\n        c = _TransformMatrix.c,\n        d = _TransformMatrix.d,\n        transformX = _TransformMatrix.x,\n        transformY = _TransformMatrix.y;\n\n    return [x * a + y * c + transformX, x * b + y * d + transformY];\n  };\n};\n\nvar getTransformedBoundingBox = function getTransformedBoundingBox(transformationParameters, boundingBox) {\n  var top = boundingBox.top,\n      left = boundingBox.left,\n      width = boundingBox.width,\n      height = boundingBox.height;\n  var center = {\n    x: width / 2,\n    y: height / 2\n  };\n  var getTransformedCoordinates = applyTransformMatrix(transformationParameters, center);\n\n  var _getTransformedCoordi = getTransformedCoordinates(left, top),\n      _getTransformedCoordi2 = _slicedToArray(_getTransformedCoordi, 2),\n      x1 = _getTransformedCoordi2[0],\n      y1 = _getTransformedCoordi2[1];\n\n  var _getTransformedCoordi3 = getTransformedCoordinates(left + width, top),\n      _getTransformedCoordi4 = _slicedToArray(_getTransformedCoordi3, 2),\n      x2 = _getTransformedCoordi4[0],\n      y2 = _getTransformedCoordi4[1];\n\n  var _getTransformedCoordi5 = getTransformedCoordinates(left + width, top + height),\n      _getTransformedCoordi6 = _slicedToArray(_getTransformedCoordi5, 2),\n      x3 = _getTransformedCoordi6[0],\n      y3 = _getTransformedCoordi6[1];\n\n  var _getTransformedCoordi7 = getTransformedCoordinates(left, top + height),\n      _getTransformedCoordi8 = _slicedToArray(_getTransformedCoordi7, 2),\n      x4 = _getTransformedCoordi8[0],\n      y4 = _getTransformedCoordi8[1];\n\n  return {\n    top: Math.min(y1, y2, y3, y4),\n    left: Math.min(x1, x2, x3, x4),\n    width: Math.max(x1, x2, x3, x4) - Math.min(x1, x2, x3, x4),\n    height: Math.max(y1, y2, y3, y4) - Math.min(y1, y2, y3, y4)\n  };\n};\n\nexports.getTransformedBoundingBox = getTransformedBoundingBox;\n\nvar getScaleMultiplier = function getScaleMultiplier(delta) {\n  var zoomSpeed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var speed = ZOOM_SPEED_MULTIPLIER * zoomSpeed;\n  var scaleMultiplier = 1;\n\n  if (delta > 0) {\n    // zoom out\n    scaleMultiplier = 1 - speed;\n  } else if (delta < 0) {\n    // zoom in\n    scaleMultiplier = 1 + speed;\n  }\n\n  return scaleMultiplier;\n};\n\nexports.getScaleMultiplier = getScaleMultiplier;\n\nvar boundCoordinates = function boundCoordinates(x, y, boundaryRatio, boundingBox, containerHeight, containerWidth) {\n  var offsetX = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var offsetY = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var top = boundingBox.top,\n      left = boundingBox.left,\n      width = boundingBox.width,\n      height = boundingBox.height; // check that computed are inside boundaries otherwise set to the bounding box limits\n\n  var boundX = left;\n  var boundY = top;\n\n  if (boundY < -boundaryRatio.vertical * height) {\n    boundY = -boundaryRatio.vertical * height;\n  } else if (boundY > containerHeight - (1 - boundaryRatio.vertical) * height) {\n    boundY = containerHeight - (1 - boundaryRatio.vertical) * height;\n  }\n\n  if (boundX < -boundaryRatio.horizontal * width) {\n    boundX = -boundaryRatio.horizontal * width;\n  } else if (boundX > containerWidth - (1 - boundaryRatio.horizontal) * width) {\n    boundX = containerWidth - (1 - boundaryRatio.horizontal) * width;\n  } // return new bounds coordinates for the transform matrix\n  // not the computed x/y coordinates\n\n\n  return {\n    boundX: x - (left - boundX),\n    boundY: y - (top - boundY),\n    offsetX: offsetX - (left - boundX),\n    offsetY: offsetY - (top - boundY)\n  };\n};\n\nexports.boundCoordinates = boundCoordinates;","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/react-easy-panzoom/lib/maths.js"],"names":["Object","defineProperty","exports","value","boundCoordinates","getScaleMultiplier","getTransformedBoundingBox","TransformMatrix","ZOOM_SPEED_MULTIPLIER","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","transformationParameters","centerCoordinates","angle","scale","offsetX","offsetY","centerX","x","centerY","y","theta","Math","PI","a","cos","b","sin","c","d","transformX","transformY","applyTransformMatrix","_TransformMatrix","boundingBox","top","left","width","height","center","getTransformedCoordinates","_getTransformedCoordi","_getTransformedCoordi2","x1","y1","_getTransformedCoordi3","_getTransformedCoordi4","x2","y2","_getTransformedCoordi5","_getTransformedCoordi6","x3","y3","_getTransformedCoordi7","_getTransformedCoordi8","x4","y4","min","max","delta","zoomSpeed","arguments","speed","scaleMultiplier","boundaryRatio","containerHeight","containerWidth","boundX","boundY","vertical","horizontal"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.boundCoordinates = exports.getScaleMultiplier = exports.getTransformedBoundingBox = exports.TransformMatrix = exports.ZOOM_SPEED_MULTIPLIER = void 0;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar ZOOM_SPEED_MULTIPLIER = 0.065; // Transform matrix use to rotate, zoom and pan\n// Can be written as T(centerX, centerY) * R(theta) * T(-centerX, -centerY) * S(scale, scale) + T(offsetX, offsetY)\n// ( a , c, x )\n// ( b , d, y )\n// ( 0 , 0, 1 )\n\nexports.ZOOM_SPEED_MULTIPLIER = ZOOM_SPEED_MULTIPLIER;\n\nvar TransformMatrix = function TransformMatrix(transformationParameters, centerCoordinates) {\n  var angle = transformationParameters.angle,\n      scale = transformationParameters.scale,\n      offsetX = transformationParameters.offsetX,\n      offsetY = transformationParameters.offsetY;\n  var centerX = centerCoordinates.x,\n      centerY = centerCoordinates.y;\n  var theta = angle * Math.PI / 180;\n  var a = Math.cos(theta) * scale;\n  var b = Math.sin(theta) * scale;\n  var c = -b;\n  var d = a;\n  var transformX = -centerX * a + centerY * b + centerX * scale;\n  var transformY = centerX * c - centerY * d + centerY * scale;\n  return {\n    a: a,\n    b: b,\n    c: c,\n    d: d,\n    x: transformX + offsetX,\n    y: transformY + offsetY\n  };\n};\n\nexports.TransformMatrix = TransformMatrix;\n\nvar applyTransformMatrix = function applyTransformMatrix(transformationParameters, centerCoordinates) {\n  return function (x, y) {\n    var _TransformMatrix = TransformMatrix(transformationParameters, centerCoordinates),\n        a = _TransformMatrix.a,\n        b = _TransformMatrix.b,\n        c = _TransformMatrix.c,\n        d = _TransformMatrix.d,\n        transformX = _TransformMatrix.x,\n        transformY = _TransformMatrix.y;\n\n    return [x * a + y * c + transformX, x * b + y * d + transformY];\n  };\n};\n\nvar getTransformedBoundingBox = function getTransformedBoundingBox(transformationParameters, boundingBox) {\n  var top = boundingBox.top,\n      left = boundingBox.left,\n      width = boundingBox.width,\n      height = boundingBox.height;\n  var center = {\n    x: width / 2,\n    y: height / 2\n  };\n  var getTransformedCoordinates = applyTransformMatrix(transformationParameters, center);\n\n  var _getTransformedCoordi = getTransformedCoordinates(left, top),\n      _getTransformedCoordi2 = _slicedToArray(_getTransformedCoordi, 2),\n      x1 = _getTransformedCoordi2[0],\n      y1 = _getTransformedCoordi2[1];\n\n  var _getTransformedCoordi3 = getTransformedCoordinates(left + width, top),\n      _getTransformedCoordi4 = _slicedToArray(_getTransformedCoordi3, 2),\n      x2 = _getTransformedCoordi4[0],\n      y2 = _getTransformedCoordi4[1];\n\n  var _getTransformedCoordi5 = getTransformedCoordinates(left + width, top + height),\n      _getTransformedCoordi6 = _slicedToArray(_getTransformedCoordi5, 2),\n      x3 = _getTransformedCoordi6[0],\n      y3 = _getTransformedCoordi6[1];\n\n  var _getTransformedCoordi7 = getTransformedCoordinates(left, top + height),\n      _getTransformedCoordi8 = _slicedToArray(_getTransformedCoordi7, 2),\n      x4 = _getTransformedCoordi8[0],\n      y4 = _getTransformedCoordi8[1];\n\n  return {\n    top: Math.min(y1, y2, y3, y4),\n    left: Math.min(x1, x2, x3, x4),\n    width: Math.max(x1, x2, x3, x4) - Math.min(x1, x2, x3, x4),\n    height: Math.max(y1, y2, y3, y4) - Math.min(y1, y2, y3, y4)\n  };\n};\n\nexports.getTransformedBoundingBox = getTransformedBoundingBox;\n\nvar getScaleMultiplier = function getScaleMultiplier(delta) {\n  var zoomSpeed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var speed = ZOOM_SPEED_MULTIPLIER * zoomSpeed;\n  var scaleMultiplier = 1;\n\n  if (delta > 0) {\n    // zoom out\n    scaleMultiplier = 1 - speed;\n  } else if (delta < 0) {\n    // zoom in\n    scaleMultiplier = 1 + speed;\n  }\n\n  return scaleMultiplier;\n};\n\nexports.getScaleMultiplier = getScaleMultiplier;\n\nvar boundCoordinates = function boundCoordinates(x, y, boundaryRatio, boundingBox, containerHeight, containerWidth) {\n  var offsetX = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var offsetY = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var top = boundingBox.top,\n      left = boundingBox.left,\n      width = boundingBox.width,\n      height = boundingBox.height; // check that computed are inside boundaries otherwise set to the bounding box limits\n\n  var boundX = left;\n  var boundY = top;\n\n  if (boundY < -boundaryRatio.vertical * height) {\n    boundY = -boundaryRatio.vertical * height;\n  } else if (boundY > containerHeight - (1 - boundaryRatio.vertical) * height) {\n    boundY = containerHeight - (1 - boundaryRatio.vertical) * height;\n  }\n\n  if (boundX < -boundaryRatio.horizontal * width) {\n    boundX = -boundaryRatio.horizontal * width;\n  } else if (boundX > containerWidth - (1 - boundaryRatio.horizontal) * width) {\n    boundX = containerWidth - (1 - boundaryRatio.horizontal) * width;\n  } // return new bounds coordinates for the transform matrix\n  // not the computed x/y coordinates\n\n\n  return {\n    boundX: x - (left - boundX),\n    boundY: y - (top - boundY),\n    offsetX: offsetX - (left - boundX),\n    offsetY: offsetY - (top - boundY)\n  };\n};\n\nexports.boundCoordinates = boundCoordinates;"]},"metadata":{},"sourceType":"script"}