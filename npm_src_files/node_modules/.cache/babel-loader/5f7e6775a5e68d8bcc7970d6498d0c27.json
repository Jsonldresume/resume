{"ast":null,"code":"/* eslint-disable new-cap */\nimport html2canvas from 'html2canvas';\nimport * as jsPDF from 'jspdf';\n\nconst move = (array, element, delta) => {\n  const index = array.findIndex(item => item.id === element.id);\n  const newIndex = index + delta;\n  if (newIndex < 0 || newIndex === array.length) return;\n  const indexes = [index, newIndex].sort((a, b) => a - b);\n  array.splice(indexes[0], 2, array[indexes[1]], array[indexes[0]]);\n};\n\nconst hexToRgb = hex => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n};\n\nconst copyToClipboard = text => {\n  const textArea = document.createElement('textarea');\n  textArea.style.position = 'fixed';\n  textArea.style.top = 0;\n  textArea.style.left = 0;\n  textArea.style.width = '2em';\n  textArea.style.height = '2em';\n  textArea.style.padding = 0;\n  textArea.style.border = 'none';\n  textArea.style.outline = 'none';\n  textArea.style.boxShadow = 'none';\n  textArea.style.background = 'transparent';\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  const successful = document.execCommand('copy');\n  document.body.removeChild(textArea);\n  return successful;\n};\n\nconst saveData = dispatch => dispatch({\n  type: 'save_data'\n});\n\nconst addItem = (dispatch, key, value) => {\n  dispatch({\n    type: 'add_item',\n    payload: {\n      key,\n      value\n    }\n  });\n  saveData(dispatch);\n};\n\nconst deleteItem = (dispatch, key, value) => {\n  dispatch({\n    type: 'delete_item',\n    payload: {\n      key,\n      value\n    }\n  });\n  saveData(dispatch);\n};\n\nconst moveItemUp = (dispatch, key, value) => {\n  dispatch({\n    type: 'move_item_up',\n    payload: {\n      key,\n      value\n    }\n  });\n  saveData(dispatch);\n};\n\nconst moveItemDown = (dispatch, key, value) => {\n  dispatch({\n    type: 'move_item_down',\n    payload: {\n      key,\n      value\n    }\n  });\n  saveData(dispatch);\n};\n\nconst importJson = (event, dispatch) => {\n  const fr = new FileReader();\n  fr.addEventListener('load', () => {\n    const importedObject = JSON.parse(fr.result);\n    dispatch({\n      type: 'import_data',\n      payload: importedObject\n    });\n    dispatch({\n      type: 'save_data'\n    });\n  });\n  fr.readAsText(event.target.files[0]);\n};\n\nlet saveAsPdfTimer = null;\n\nconst saveAsPdf = (pageRef, panZoomRef, quality, type) => {\n  if (saveAsPdfTimer) {\n    return;\n  }\n\n  return new Promise(resolve => {\n    panZoomRef.current.autoCenter(1);\n    panZoomRef.current.reset();\n    saveAsPdfTimer = setTimeout(() => {\n      html2canvas(pageRef.current, {\n        scale: 5,\n        useCORS: true,\n        allowTaint: true\n      }).then(canvas => {\n        const image = canvas.toDataURL('image/jpeg', quality / 100);\n        const doc = new jsPDF({\n          orientation: 'portrait',\n          unit: 'px',\n          format: type === 'unconstrained' ? [canvas.width, canvas.height] : 'a4'\n        });\n        const pageWidth = doc.internal.pageSize.getWidth();\n        const pageHeight = doc.internal.pageSize.getHeight();\n        const widthRatio = pageWidth / canvas.width;\n        const heightRatio = pageHeight / canvas.height;\n        const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\n        const canvasWidth = canvas.width * ratio;\n        const canvasHeight = canvas.height * ratio;\n        let marginX = 0;\n        let marginY = 0;\n\n        if (type !== 'unconstrained') {\n          marginX = (pageWidth - canvasWidth) / 2;\n          marginY = (pageHeight - canvasHeight) / 2;\n        }\n\n        doc.addImage(image, 'JPEG', marginX, marginY, canvasWidth, canvasHeight, null, 'SLOW');\n        doc.save(`RxResume_${Date.now()}.pdf`);\n        saveAsPdfTimer = null;\n        resolve();\n      });\n    }, 250);\n  });\n};\n\nlet saveAsMultiPagePdfTimer = null;\n\nconst saveAsMultiPagePdf = (pageRef, panZoomRef, quality) => {\n  if (saveAsMultiPagePdfTimer) {\n    return;\n  }\n\n  return new Promise(resolve => {\n    panZoomRef.current.autoCenter(1);\n    panZoomRef.current.reset();\n    saveAsMultiPagePdfTimer = setTimeout(() => {\n      html2canvas(pageRef.current, {\n        scale: 5,\n        useCORS: true,\n        allowTaint: true\n      }).then(canvas => {\n        const image = canvas.toDataURL('image/jpeg', quality / 100);\n        const doc = new jsPDF({\n          orientation: 'portrait',\n          unit: 'px',\n          format: 'a4'\n        });\n        const pageHeight = doc.internal.pageSize.getHeight();\n        const canvasWidth = doc.internal.pageSize.getWidth();\n        const canvasHeight = canvas.height * canvasWidth / canvas.width;\n        let marginTop = 0;\n        let heightLeft = canvasHeight;\n        doc.addImage(image, 'JPEG', 0, marginTop, canvasWidth, canvasHeight);\n        heightLeft -= pageHeight;\n\n        while (heightLeft >= 0) {\n          marginTop = heightLeft - canvasHeight;\n          doc.addPage();\n          doc.addImage(image, 'JPEG', 0, marginTop, canvasWidth, canvasHeight);\n          heightLeft -= pageHeight;\n        }\n\n        doc.save(`RxResume_${Date.now()}.pdf`);\n        saveAsMultiPagePdfTimer = null;\n        resolve();\n      });\n    }, 250);\n  });\n};\n\nexport { move, hexToRgb, copyToClipboard, saveData, addItem, deleteItem, moveItemUp, moveItemDown, importJson, saveAsPdf, saveAsMultiPagePdf };","map":{"version":3,"sources":["D:/github/jsonldresume/resume/src/utils/index.js"],"names":["html2canvas","jsPDF","move","array","element","delta","index","findIndex","item","id","newIndex","length","indexes","sort","a","b","splice","hexToRgb","hex","shorthandRegex","replace","m","r","g","result","exec","parseInt","copyToClipboard","text","textArea","document","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","focus","select","successful","execCommand","removeChild","saveData","dispatch","type","addItem","key","payload","deleteItem","moveItemUp","moveItemDown","importJson","event","fr","FileReader","addEventListener","importedObject","JSON","parse","readAsText","target","files","saveAsPdfTimer","saveAsPdf","pageRef","panZoomRef","quality","Promise","resolve","current","autoCenter","reset","setTimeout","scale","useCORS","allowTaint","then","canvas","image","toDataURL","doc","orientation","unit","format","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","widthRatio","heightRatio","ratio","canvasWidth","canvasHeight","marginX","marginY","addImage","save","Date","now","saveAsMultiPagePdfTimer","saveAsMultiPagePdf","marginTop","heightLeft","addPage"],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\r\nimport html2canvas from 'html2canvas';\r\nimport * as jsPDF from 'jspdf';\r\n\r\nconst move = (array, element, delta) => {\r\n  const index = array.findIndex(item => item.id === element.id);\r\n  const newIndex = index + delta;\r\n  if (newIndex < 0 || newIndex === array.length) return;\r\n  const indexes = [index, newIndex].sort((a, b) => a - b);\r\n  array.splice(indexes[0], 2, array[indexes[1]], array[indexes[0]]);\r\n};\r\n\r\nconst hexToRgb = hex => {\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n};\r\n\r\nconst copyToClipboard = text => {\r\n  const textArea = document.createElement('textarea');\r\n  textArea.style.position = 'fixed';\r\n  textArea.style.top = 0;\r\n  textArea.style.left = 0;\r\n  textArea.style.width = '2em';\r\n  textArea.style.height = '2em';\r\n  textArea.style.padding = 0;\r\n  textArea.style.border = 'none';\r\n  textArea.style.outline = 'none';\r\n  textArea.style.boxShadow = 'none';\r\n  textArea.style.background = 'transparent';\r\n  textArea.value = text;\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n  const successful = document.execCommand('copy');\r\n  document.body.removeChild(textArea);\r\n  return successful;\r\n};\r\n\r\nconst saveData = dispatch => dispatch({ type: 'save_data' });\r\n\r\nconst addItem = (dispatch, key, value) => {\r\n  dispatch({\r\n    type: 'add_item',\r\n    payload: {\r\n      key,\r\n      value,\r\n    },\r\n  });\r\n\r\n  saveData(dispatch);\r\n};\r\n\r\nconst deleteItem = (dispatch, key, value) => {\r\n  dispatch({\r\n    type: 'delete_item',\r\n    payload: {\r\n      key,\r\n      value,\r\n    },\r\n  });\r\n\r\n  saveData(dispatch);\r\n};\r\n\r\nconst moveItemUp = (dispatch, key, value) => {\r\n  dispatch({\r\n    type: 'move_item_up',\r\n    payload: {\r\n      key,\r\n      value,\r\n    },\r\n  });\r\n\r\n  saveData(dispatch);\r\n};\r\n\r\nconst moveItemDown = (dispatch, key, value) => {\r\n  dispatch({\r\n    type: 'move_item_down',\r\n    payload: {\r\n      key,\r\n      value,\r\n    },\r\n  });\r\n\r\n  saveData(dispatch);\r\n};\r\n\r\nconst importJson = (event, dispatch) => {\r\n  const fr = new FileReader();\r\n  fr.addEventListener('load', () => {\r\n    const importedObject = JSON.parse(fr.result);\r\n    dispatch({ type: 'import_data', payload: importedObject });\r\n    dispatch({ type: 'save_data' });\r\n  });\r\n  fr.readAsText(event.target.files[0]);\r\n};\r\n\r\nlet saveAsPdfTimer = null;\r\nconst saveAsPdf = (pageRef, panZoomRef, quality, type) => {\r\n  if(saveAsPdfTimer){\r\n      return;\r\n  }\r\n  return new Promise(resolve => {\r\n    panZoomRef.current.autoCenter(1);\r\n    panZoomRef.current.reset();\r\n\r\n    saveAsPdfTimer = setTimeout(() => {\r\n      html2canvas(pageRef.current, {\r\n        scale: 5,\r\n        useCORS: true,\r\n        allowTaint: true,\r\n      }).then(canvas => {\r\n        const image = canvas.toDataURL('image/jpeg', quality / 100);\r\n        const doc = new jsPDF({\r\n          orientation: 'portrait',\r\n          unit: 'px',\r\n          format: type === 'unconstrained' ? [canvas.width, canvas.height] : 'a4',\r\n        });\r\n\r\n        const pageWidth = doc.internal.pageSize.getWidth();\r\n        const pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n        const widthRatio = pageWidth / canvas.width;\r\n        const heightRatio = pageHeight / canvas.height;\r\n        const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\r\n\r\n        const canvasWidth = canvas.width * ratio;\r\n        const canvasHeight = canvas.height * ratio;\r\n\r\n        let marginX = 0;\r\n        let marginY = 0;\r\n\r\n        if (type !== 'unconstrained') {\r\n          marginX = (pageWidth - canvasWidth) / 2;\r\n          marginY = (pageHeight - canvasHeight) / 2;\r\n        }\r\n\r\n        doc.addImage(image, 'JPEG', marginX, marginY, canvasWidth, canvasHeight, null, 'SLOW');\r\n        doc.save(`RxResume_${Date.now()}.pdf`);\r\n        saveAsPdfTimer = null;\r\n        resolve();\r\n      });\r\n    }, 250);\r\n  });\r\n}\r\n  \r\nlet saveAsMultiPagePdfTimer = null;\r\nconst saveAsMultiPagePdf = (pageRef, panZoomRef, quality) => {\r\n  if(saveAsMultiPagePdfTimer){\r\n      return;\r\n  }\r\n  return new Promise(resolve => {\r\n    panZoomRef.current.autoCenter(1);\r\n    panZoomRef.current.reset();\r\n\r\n    saveAsMultiPagePdfTimer = setTimeout(() => {\r\n      html2canvas(pageRef.current, {\r\n        scale: 5,\r\n        useCORS: true,\r\n        allowTaint: true,\r\n      }).then(canvas => {\r\n        const image = canvas.toDataURL('image/jpeg', quality / 100);\r\n        const doc = new jsPDF({\r\n          orientation: 'portrait',\r\n          unit: 'px',\r\n          format: 'a4',\r\n        });\r\n\r\n        const pageHeight = doc.internal.pageSize.getHeight();\r\n        const canvasWidth = doc.internal.pageSize.getWidth();\r\n        const canvasHeight = (canvas.height * canvasWidth) / canvas.width;\r\n        let marginTop = 0;\r\n        let heightLeft = canvasHeight;\r\n\r\n        doc.addImage(image, 'JPEG', 0, marginTop, canvasWidth, canvasHeight);\r\n        heightLeft -= pageHeight;\r\n\r\n        while (heightLeft >= 0) {\r\n          marginTop = heightLeft - canvasHeight;\r\n          doc.addPage();\r\n          doc.addImage(image, 'JPEG', 0, marginTop, canvasWidth, canvasHeight);\r\n          heightLeft -= pageHeight;\r\n        }\r\n\r\n        doc.save(`RxResume_${Date.now()}.pdf`);\r\n        saveAsMultiPagePdfTimer = null;\r\n        resolve();\r\n      });\r\n    }, 250);\r\n  });\r\n}\r\n\r\nexport {\r\n  move,\r\n  hexToRgb,\r\n  copyToClipboard,\r\n  saveData,\r\n  addItem,\r\n  deleteItem,\r\n  moveItemUp,\r\n  moveItemDown,\r\n  importJson,\r\n  saveAsPdf,\r\n  saveAsMultiPagePdf,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}