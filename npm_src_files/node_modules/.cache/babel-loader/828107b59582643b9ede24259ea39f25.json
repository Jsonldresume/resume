{"ast":null,"code":"\"use strict\";\n\nvar visit = require('unist-util-visit');\n\nvar splice = [].splice;\n\nexports.ofType = function (types, mode) {\n  return ifNotMatch(allow, mode);\n\n  function allow(node, index, parent) {\n    return !types.includes(node.type);\n  }\n};\n\nexports.ifNotMatch = ifNotMatch;\n\nfunction ifNotMatch(allow, mode) {\n  return transform;\n\n  function transform(tree) {\n    visit(tree, filter);\n    return tree;\n  } // eslint-disable-next-line consistent-return\n\n\n  function filter(node, index, parent) {\n    if (parent && !allow(node, index, parent)) {\n      var parameters = [index, 1];\n\n      if (mode === 'unwrap' && node.children) {\n        parameters = parameters.concat(node.children);\n      }\n\n      splice.apply(parent.children, parameters);\n      return index;\n    }\n  }\n}","map":{"version":3,"sources":["D:/github/jsonldresume/resume/node_modules/react-markdown/lib/plugins/disallow-node.js"],"names":["visit","require","splice","exports","ofType","types","mode","ifNotMatch","allow","node","index","parent","includes","type","transform","tree","filter","parameters","children","concat","apply"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAG,GAAGA,MAAhB;;AAEAC,OAAO,CAACC,MAAR,GAAiB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACtC,SAAOC,UAAU,CAACC,KAAD,EAAQF,IAAR,CAAjB;;AAEA,WAASE,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,WAAO,CAACN,KAAK,CAACO,QAAN,CAAeH,IAAI,CAACI,IAApB,CAAR;AACD;AACF,CAND;;AAQAV,OAAO,CAACI,UAAR,GAAqBA,UAArB;;AAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2BF,IAA3B,EAAiC;AAC/B,SAAOQ,SAAP;;AAEA,WAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvBf,IAAAA,KAAK,CAACe,IAAD,EAAOC,MAAP,CAAL;AACA,WAAOD,IAAP;AACD,GAN8B,CAM7B;;;AAGF,WAASC,MAAT,CAAgBP,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,QAAIA,MAAM,IAAI,CAACH,KAAK,CAACC,IAAD,EAAOC,KAAP,EAAcC,MAAd,CAApB,EAA2C;AACzC,UAAIM,UAAU,GAAG,CAACP,KAAD,EAAQ,CAAR,CAAjB;;AAEA,UAAIJ,IAAI,KAAK,QAAT,IAAqBG,IAAI,CAACS,QAA9B,EAAwC;AACtCD,QAAAA,UAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBV,IAAI,CAACS,QAAvB,CAAb;AACD;;AAEDhB,MAAAA,MAAM,CAACkB,KAAP,CAAaT,MAAM,CAACO,QAApB,EAA8BD,UAA9B;AACA,aAAOP,KAAP;AACD;AACF;AACF","sourcesContent":["\"use strict\";\n\nvar visit = require('unist-util-visit');\n\nvar splice = [].splice;\n\nexports.ofType = function (types, mode) {\n  return ifNotMatch(allow, mode);\n\n  function allow(node, index, parent) {\n    return !types.includes(node.type);\n  }\n};\n\nexports.ifNotMatch = ifNotMatch;\n\nfunction ifNotMatch(allow, mode) {\n  return transform;\n\n  function transform(tree) {\n    visit(tree, filter);\n    return tree;\n  } // eslint-disable-next-line consistent-return\n\n\n  function filter(node, index, parent) {\n    if (parent && !allow(node, index, parent)) {\n      var parameters = [index, 1];\n\n      if (mode === 'unwrap' && node.children) {\n        parameters = parameters.concat(node.children);\n      }\n\n      splice.apply(parent.children, parameters);\n      return index;\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}