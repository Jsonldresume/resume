{"ast":null,"code":"'use strict';\n\nvar stringify = require('unist-util-stringify-position');\n\nmodule.exports = VMessage; // Inherit from `Error#`.\n\nfunction VMessagePrototype() {}\n\nVMessagePrototype.prototype = Error.prototype;\nVMessage.prototype = new VMessagePrototype(); // Message properties.\n\nvar proto = VMessage.prototype;\nproto.file = '';\nproto.name = '';\nproto.reason = '';\nproto.message = '';\nproto.stack = '';\nproto.fatal = null;\nproto.column = null;\nproto.line = null; // Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\n\nfunction VMessage(reason, position, origin) {\n  var parts;\n  var range;\n  var location;\n\n  if (typeof position === 'string') {\n    origin = position;\n    position = null;\n  }\n\n  parts = parseOrigin(origin);\n  range = stringify(position) || '1:1';\n  location = {\n    start: {\n      line: null,\n      column: null\n    },\n    end: {\n      line: null,\n      column: null\n    }\n  }; // Node.\n\n  if (position && position.position) {\n    position = position.position;\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position;\n      position = position.start;\n    } else {\n      // Point.\n      location.start = position;\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack;\n    reason = reason.message;\n  }\n\n  this.message = reason;\n  this.name = range;\n  this.reason = reason;\n  this.line = position ? position.line : null;\n  this.column = position ? position.column : null;\n  this.location = location;\n  this.source = parts[0];\n  this.ruleId = parts[1];\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null];\n  var index;\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':');\n\n    if (index === -1) {\n      result[1] = origin;\n    } else {\n      result[0] = origin.slice(0, index);\n      result[1] = origin.slice(index + 1);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["D:/github/jsonldresume/my-app/node_modules/vfile-message/index.js"],"names":["stringify","require","module","exports","VMessage","VMessagePrototype","prototype","Error","proto","file","name","reason","message","stack","fatal","column","line","position","origin","parts","range","location","parseOrigin","start","end","source","ruleId","result","index","indexOf","slice"],"mappings":"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","sourcesContent":["'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"script"}